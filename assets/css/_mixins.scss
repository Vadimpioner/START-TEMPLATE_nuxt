@mixin value_adaptive($property, $starSize, $minSize, $width: $container, $minWidthContainer: 320, $important: null) {
  $addSize: $starSize - $minSize;
  @if $important == null {#{$property}: $starSize + px;}
  @media (max-width: #{$width + px}) {
    #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidthContainer + px}) / (#{$width} - #{$minWidthContainer}))) $important;
  }
}
@mixin value_change($property, $value, $newValue, $width) {
  #{$property}: $value;
  @media (max-width: #{$width + px}) {
    #{$property}: $newValue;
  }
}

@mixin scroll($colorScroll: $blue, $backgroundScroll: transparent, $widthScroll: 6, $heightScroll: 6, $radiusScroll: 6) {
  &::-webkit-scrollbar {
    @include value_adaptive('width', $widthScroll, 4, 1110, 320);
    @include value_adaptive('height', $heightScroll, 4, 1110, 320);
    @include value_adaptive('border-radius', $radiusScroll, 4, 1110, 320);
    background: $backgroundScroll;
  }
  &::-webkit-scrollbar-thumb {
    background: $colorScroll;
    @include value_adaptive('border-radius', $radiusScroll, 4, 1110, 320);
  }
}
